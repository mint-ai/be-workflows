name: Publish distribution

on:
  workflow_call:
    inputs:
      aws-domain:
        required: true
        type: string
      aws-domain-owner:
        required: true
        type: string
      aws-role:
        required: true
        type: string
      aws-region:
        required: true
        type: string

jobs:
  deploy:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Check versioning
        run: |
          poetry_version=$(sed -n 's/^ *version.*=.*"\([^"]*\)".*/\1/p' pyproject.toml) 
          tag_version=${{ github.ref_name }}
          if [ "$poetry_version" != "$tag_version" ]; then
            echo "Poetry version ($poetry_version) and tag ($tag_version) do not match"
            exit 2
          fi
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: "3.8"
          cache: "poetry"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ inputs.aws-region }}
          role-to-assume: ${{ inputs.aws-role }}
      - name: Generate CodeArtifact password
        id: codeartifact
        run: |
          export CODEARTIFACT_PASSWORD=$(aws codeartifact get-authorization-token --domain-owner ${{ inputs.aws-domain-owner }} --domain ${{ inputs.aws-domain }} --query 'authorizationToken' --output text)
          echo "::add-mask::$CODEARTIFACT_PASSWORD"
          echo "password=$CODEARTIFACT_PASSWORD" >> $GITHUB_OUTPUT
      - name: Install dependencies
        env:
          POETRY_HTTP_BASIC_CODEARTIFACT_USERNAME: aws
          POETRY_HTTP_BASIC_CODEARTIFACT_PASSWORD: ${{ steps.codeartifact.outputs.password }}
        run: poetry install --no-root
      - name: Publish package to CodeArtifact
        env:
          POETRY_HTTP_BASIC_CODEARTIFACT_USERNAME: aws
          POETRY_HTTP_BASIC_CODEARTIFACT_PASSWORD: ${{ steps.codeartifact.outputs.password }}
          POETRY_REPOSITORIES_CODEARTIFACT_URL: https://${{ inputs.aws-domain }}-${{ inputs.aws-domain-owner }}.d.codeartifact.${{ inputs.aws-region }}.amazonaws.com/pypi/api-team/
        run: |
          poetry -vvv publish --build --repository codeartifact

permissions:
  id-token: write
  contents: read