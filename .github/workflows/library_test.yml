# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python tests

on:
  workflow_call:
    inputs:
      aws-domain:
        required: true
        type: string
      aws-domain-owner:
        required: true
        type: string
      aws-role:
        required: true
        type: string
      aws-region:
        required: true
        type: string

jobs:
  test:
    name: Running Tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: "3.8"
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ inputs.aws-region }}
        role-to-assume: ${{ inputs.aws-role }}
    - name: Install dependencies
      run: |
        export POETRY_HTTP_BASIC_CODEARTIFACT_USERNAME=aws
        export POETRY_HTTP_BASIC_CODEARTIFACT_PASSWORD=$(aws codeartifact get-authorization-token --domain-owner ${{ inputs.aws-domain-owner }} --domain ${{ inputs.aws-domain }} --query 'authorizationToken' --output text)
        curl -sSL https://install.python-poetry.org | python3 -
        poetry config virtualenvs.create false && poetry install --with test
    - name: Get Python changed files
      id: changed-py-files
      uses: tj-actions/changed-files@v23
      with:
        files: |
          *.py
          **/*.py
    - name: Lint with flake8
      if: steps.changed-py-files.outputs.any_changed == 'true'
      run: flake8 ${{ steps.changed-py-files.outputs.all_changed_files }}
    - name: Check format with black
      if: steps.changed-py-files.outputs.any_changed == 'true'
      run: black --check ${{ steps.changed-py-files.outputs.all_changed_files }}
    - name: Check imports with isort
      if: steps.changed-py-files.outputs.any_changed == 'true'
      run: isort --check-only --profile black ${{ steps.changed-py-files.outputs.all_changed_files }}
    - name: Check with mypy
      if: steps.changed-py-files.outputs.any_changed == 'true'
      run: mypy ${{ steps.changed-py-files.outputs.all_changed_files }}
    - name: Run tests with pytest
      run: |
        pytest
    - name: Build
      run: |
        poetry -vvv build


permissions:
  id-token: write
  contents: read
